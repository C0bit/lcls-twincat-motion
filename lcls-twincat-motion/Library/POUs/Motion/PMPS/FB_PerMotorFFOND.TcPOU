<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="FB_PerMotorFFOND" Id="{63251316-84c1-4557-ae64-15075eeb972a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_PerMotorFFOND
(*
    PMPS fast faults that must be done per motor, rather than per state, based purely
    on the motor status and not other PMPS considerations.

    These currently include:
    - Fault if the encoder has an error. Every other protection is based on the encoder,
      so we can't trust anything if the encoder is faulting.
*)
VAR_IN_OUT
    astMotionStage: ARRAY[*] OF DUT_MotionStage;
    afbEncError: ARRAY[*] OF FB_EncErrorFFO;
    fbFFHWO: FB_HardwareFFOutput;
END_VAR
VAR_INPUT
    // Identifying name to use in group fast faults
    sDeviceName: STRING;
END_VAR
VAR_OUTPUT
    // Set to TRUE if the arrays don't have the same bounds. In this FB, that's an automatic fault.
    bArrayMismatch: BOOL;
END_VAR
VAR
    ffProgrammerError: FB_FastFault;
    nIter: DINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
CheckArrayLengths();
IF NOT bArrayMismatch THEN
    HandleLoops();
END_IF
HandleFFO();
]]></ST>
    </Implementation>
    <Action Name="CheckArrayLengths" Id="{c31a9d14-bd55-46b2-acd9-f19ee66712e4}">
      <Implementation>
        <ST><![CDATA[
// Ensure that the variable length arrays have the same bounds
bArrayMismatch S= LOWER_BOUND(astMotionStage, 1) <> LOWER_BOUND(afbEncError, 1);
bArrayMismatch S= UPPER_BOUND(astMotionStage, 1) <> UPPER_BOUND(afbEncError, 1);
]]></ST>
      </Implementation>
    </Action>
    <Action Name="HandleFFO" Id="{61cab890-5c77-4c2c-ab73-7d5467037676}">
      <Implementation>
        <ST><![CDATA[
ffProgrammerError(
    i_xOK:=NOT bArrayMismatch,
    i_xAutoReset:=FALSE,
    i_DevName:=sDeviceName,
    i_Desc:='Error matching array lengths in program',
    io_fbFFHWO:=fbFFHWO,
);
]]></ST>
      </Implementation>
    </Action>
    <Action Name="HandleLoops" Id="{1e2bc2d2-019c-4cea-a7e4-68373d08cb58}">
      <Implementation>
        <ST><![CDATA[
FOR nIter := LOWER_BOUND(astMotionStage, 1) TO UPPER_BOUND(astMotionStage, 1) DO
    afbEncError[nIter](
        stMotionstage:=astMotionStage[nIter],
        fbFFHWO:=fbFFHWO,
        bAutoReset:=TRUE,
    );
END_FOR
]]></ST>
      </Implementation>
    </Action>
  </POU>
</TcPlcObject>